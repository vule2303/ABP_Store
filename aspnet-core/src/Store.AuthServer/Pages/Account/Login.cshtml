@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Account.Localization
@using Volo.Abp.Account.Settings
@using Volo.Abp.Account.Web.Pages.Account;
@using Volo.Abp.AspNetCore.Mvc.UI.Theming;
@using Volo.Abp.Identity;
@using Volo.Abp.Settings
@model Store.Pages.Account.Model.CustomLoginModel
@inject IHtmlLocalizer<AccountResource> L
@inject IThemeManager ThemeManager
@inject Volo.Abp.Settings.ISettingProvider SettingProvider

<div class="card mt-3 shadow-sm rounded">
    <div class="card-body p-5">
        <h4>@L["Đăng nhập"]</h4>
        @if (await SettingProvider.IsTrueAsync(AccountSettingNames.IsSelfRegistrationEnabled))
        {
                <strong>
                @L["Chưa có tài khoản?"]
                    <a href="@Url.Page("./Register", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})" class="text-decoration-none">@L["Đăng ký"]</a>
                </strong>
        }
        @if (Model.EnableLocalLogin)
        {
                <form method="post" class="mt-4">
                    <div class="mb-3">
                        <label asp-for="LoginInput.UserNameOrEmailAddress" class="form-label">Nhập username hoặc Email</label>
                        <input asp-for="LoginInput.UserNameOrEmailAddress" class="form-control"/>
                        <span asp-validation-for="LoginInput.UserNameOrEmailAddress" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="LoginInput.Password" class="form-label">Mật khẩu</label>
                        <input asp-for="LoginInput.Password" class="form-control"/>
                        <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
                    </div>
                    <abp-row>

                        <abp-column class="text-end">
                            <a href="@Url.Page("./Quên mật khẩu?", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})">@L["Quên mật khẩu?"]</a>
                        </abp-column>
                    </abp-row>
                    <div class="d-grid gap-2">
                        <abp-button type="submit" button-type="Primary" name="Action" value="Login" class="btn-lg mt-3">@L["Đăng nhập"]</abp-button>
                    @if (Model.ShowCancelButton)
                    {
                                <abp-button type="submit" button-type="Secondary" formnovalidate="formnovalidate" name="Action" value="Cancel" class="btn-lg mt-3">@L["Hủy"]</abp-button>
                    }
                    </div>
                </form>
        }

        @if (Model.VisibleExternalProviders.Any())
        {
                <div class="mt-2">
                    <h5>@L["OrLoginWith"]</h5>
                    <form asp-page="./Login" asp-page-handler="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" asp-route-returnUrlHash="@Model.ReturnUrlHash" method="post">
                    @foreach (var provider in Model.VisibleExternalProviders)
                    {
                                <button type="submit" class="btn btn-primary m-1" name="provider" value="@provider.AuthenticationScheme" title="@L["LogInUsingYourProviderAccount", provider.DisplayName]">@provider.DisplayName</button>
                    }
                    </form>
                </div>
        }

        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
                <div class="alert alert-warning">
                    <strong>@L["InvalidLoginRequest"]</strong>
                @L["ThereAreNoLoginSchemesConfiguredForThisClient"]
                </div>
        }

    </div>
</div>
